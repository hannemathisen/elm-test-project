var _hannemathisen$elm_test_project$App_State$loadImage = A2(
	_elm_lang$core$Task$attempt,
	_hannemathisen$elm_test_project$App_Types$ImageLoaded,
	_hannemathisen$elm_test_project$Canvas$loadImage('white.png'));
var _hannemathisen$elm_test_project$App_State$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'ImageLoaded':
				var _p1 = _elm_lang$core$Result$toMaybe(_p0._0);
				if (_p1.ctor === 'Just') {
					var _p2 = _p1._0;
					var newZoomModel = model.zoom;
					var newDrawModel = model.draw;
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								draw: _elm_lang$core$Native_Utils.update(
									newDrawModel,
									{
										image: _hannemathisen$elm_test_project$Draw_Types$GotCanvas(_p2)
									}),
								zoom: _elm_lang$core$Native_Utils.update(
									newZoomModel,
									{
										image: _hannemathisen$elm_test_project$Zoom_Types$GotCanvas(_p2)
									})
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _hannemathisen$elm_test_project$App_State$loadImage};
				}
			case 'ChangeMode':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{globalMode: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'DrawMsg':
				var _p3 = A2(_hannemathisen$elm_test_project$Draw_State$update, _p0._0, model.draw);
				var drawModel = _p3._0;
				var drawCmd = _p3._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{draw: drawModel}),
					_1: A2(_elm_lang$core$Platform_Cmd$map, _hannemathisen$elm_test_project$App_Types$DrawMsg, drawCmd)
				};
			default:
				var _p4 = A2(_hannemathisen$elm_test_project$Zoom_State$update, _p0._0, model.zoom);
				var zoomModel = _p4._0;
				var zoomCmd = _p4._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{zoom: zoomModel}),
					_1: A2(_elm_lang$core$Platform_Cmd$map, _hannemathisen$elm_test_project$App_Types$ZoomMsg, zoomCmd)
				};
		}
	});
var _hannemathisen$elm_test_project$App_State$init = function () {
	var _p5 = _hannemathisen$elm_test_project$Zoom_State$init;
	var zoomModel = _p5._0;
	var zoomCmd = _p5._1;
	var _p6 = _hannemathisen$elm_test_project$Draw_State$init;
	var drawModel = _p6._0;
	var drawCmd = _p6._1;
	var model = {draw: drawModel, zoom: zoomModel, globalMode: _hannemathisen$elm_test_project$App_Types$Main};
	return {ctor: '_Tuple2', _0: model, _1: _hannemathisen$elm_test_project$App_State$loadImage};
}();
